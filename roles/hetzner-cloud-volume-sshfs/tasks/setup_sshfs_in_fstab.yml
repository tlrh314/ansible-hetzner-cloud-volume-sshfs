---
- name: Install sshfs
  apt:
    pkg:
    - sshfs

- name: Change the mount point on server1 to /mnt/storage
  replace:
    path: /etc/fstab
    after: '/mnt/'
    before: ' ext4'
    regexp: '^(.+)$'
    replace: 'storage'
  when: "'server1' in inventory_hostname"

- name: Create /mnt/storage if it does not exist on server2
  file:
    path: "/mnt/storage"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: "'server1' not in inventory_hostname"

- name: Add the sshfs mount of the volume to the fstab on server2
  lineinfile:
    dest: /etc/fstab
    regexp: "^sshfs"
    line: "sshfs#server1:/mnt/storage /mnt/storage fuse defaults,nonempty,allow_other,reconnect,_netdev,users,ServerAliveInterval=15,ServerAliveCountMax=3 0 0"
    state: present
  when: "'server1' not in inventory_hostname"

- name: Reboot server1 (which owns the volume)
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: "'server1' in inventory_hostname"

- name: Wait for reboot of server1 to complete 
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: "'server1' in inventory_hostname"

- name: Reboot the application servers
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: "'server1' not in inventory_hostname"

- name: Wait for reboot of server2 to complete 
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: "'server1' not in inventory_hostname"

- name: Create /mnt/storage/test_{{ansible_hostname}}
  file:
    path: "/mnt/storage/test_{{ansible_hostname}}"
    state: touch

- name: Check that /mnt/storage/test_{{ansible_hostname}} exists
  file:
    path: "/mnt/storage/test_{{ansible_hostname}}"
    state: file 
